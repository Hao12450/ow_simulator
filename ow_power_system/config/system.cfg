# configuration
efficiency: 0.9

# Maximum RUL estimation for prognoser predictions (seconds).
max_horizon: 10000

# Number of samples created by each node during prognoser predictions for accuracy.
num_samples: 100

# initials
initial_power: 0.0          # watts
initial_voltage: 4.1        # volts
initial_temperature: 20.0   # deg. C

initial_soc: 0.95           # % (used for first placeholder publication)

# voltage
base_voltage: 2.8           # volts
voltage_range: 0.1          # volts

# power
baseline_power: 1.0         # watts

# temperature
min_temperature: 17.5       # deg. C
max_temperature: 21.5       # deg. C

# battery life
battery_lifetime: 2738.0    # Estimate of battery lifetime (seconds)

# GSAP (prognostics engine) related configurations

# GSAP processes data at a certain rate.
gsap_rate: 0.5              # hz

# The expected time interval between publications, which lines up with
# a 0.5Hz loop rate.
time_interval: 2

# Similarly, since the inputs used to compute power consumption come
# from the /joint_states topic published at 50Hz, we multiply this by
# GSAP's rate to determine the number of entries used in a moving
# average:
power_average_size: 25

# The current GSAP model breaks if power input is too high.  As a
# workaround to prevent this, we cap its power input.
max_gsap_power_input: 20    # watts

# DEBUG CUSTOMIZATION
# This flag disables all power-related debug output from printing if false.
# The other flags allow filtering of specific messages.
print_debug: false

# Prints the timestamp of each cycle to the terminal.
# Output: 1 line per cycle.
timestamp_print_debug: false

# Prints the input data sent to GSAP's asynchronous prognosers each cycle.
# Output: NUM_NODES lines per cycle.
inputs_print_debug: false

# Prints the information currently stored in all nodes each cycle.
# Output: NUM_NODES lines per cycle.
outputs_print_debug: false

# Prints the information that will be published via rostopics each cycle.
# Output: 1 line per cycle.
topics_print_debug: false

# Prints the mechanical power calculated during jointStatesCb each cycle.
# Output: 3 lines per cycle.
mech_power_print_debug: false